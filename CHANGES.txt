0.2.2
    VanBusRx.cpp: added methods Disable() and Enable(), to be used when other timing-critical / interrupt-driven
    tasks need to be done, like e.g. writing to SPIFFS (SPI Flash File System).

    LiveWebPage.ino:
    * Various bugfixes and updates on parsing sat nav data structures
    * Small update in parsing FM tuner data
    * "cd_changer_current_disc": set to "---" if no discs present

0.2.1
    VanBusRx.cpp: various changes that seem to decrease the number of packets with CRC errors

    Added parameter 'queueSize' to TVanPacketRxQueue::Setup(...), giving option to set queue size at runtime

    LiveWebPage.ino:
    * Added separate 'Config.h' file for Wi-Fi settings
    * Added reading of infrared remote control
    * Added reading of ESP system data
    * Improved way to filter which packets are dumped (in JSON format) to Serial
    * Various packet parsing improvements

    PacketParser.ino:
    * Disabled Wi-Fi to practically eliminate occurrence of packets with CRC errors 
    * Various packet parsing improvements

    DisplayNotifications.ino
    * Disabled Wi-Fi to practically eliminate occurrence of packets with CRC errors 

    SendPacket.ino
    * Disabled Wi-Fi to practically eliminate occurrence of packets with CRC errors 

    VanBusDump.ino 
    * Disabled Wi-Fi to practically eliminate occurrence of packets with CRC errors 

0.2.0
    Added function to transmit packets onto the VAN bus:
    * New class 'TVanBus' with single instance 'VanBus'.
    * New class 'TVanPacketTxQueue' with single instance 'VanBusTx'.
    * Renamed existing class instance 'VanBus' to 'VanBusRx'.
    Still lots of TODOs: see code. Also:
    * Transmitting an in-frame response
    * Transmitting a "read" packet then receiving the in-frame response

    Added 'DisplayNotifications.ino' example - send all MFD warnings, one by one.

    Added 'SendPacket.ino' example - show all received information from the VAN bus on a "live" web page.

    Added 'LiveWebPage.ino' example - send a packet on the VAN bus.

    Many improvements and documentation updates.

0.1.2
    Added 'PacketParser.ino' example sketch, showing all packets that I could decode from my vehicle.

    Various small improvements, including:
    * FloatToStr(...): save 12 statically allocated bytes of precious RAM.
    * nBitsFromCycles(...): small correction seems to decrease number of CRC errors.
    * TIsrDebugPacket::Dump(...): fix to be in line with the parsing by PinChangeIsr().
    * class TVanPacketRxQueue:
      - 'Receive' method: optionally report queue overrun condition.
      - 'DumpRaw' method: various changes in output formatting, added option to change last character, e.g. to '\0'
        for dumping into char array.
      - Removed '_full' flag: not necessary.
      - Added private method '_IsQueueOverrun()'.
      - Removed private method '_IsFull()'.
    * Updated 'library.json' and 'library.properties'.

0.1.1
    Removed mentioning ESP32 as supported hardware

0.1
    Initial version
